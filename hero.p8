pico-8 cartridge // http://www.pico-8.com
version 35
__lua__
local player
local map_objects
local game_state
local logo_sprCount
local logo_pix

function _init()
	map_objects={}
	player=make_knight(60,60)
	plat3=make_platform(68,100)
	plat2=make_platform(60,100)
	plat1=make_platform(52,100)
	add(map_objects,plat3)
	add(map_objects,plat2)
	add(map_objects,plat1)
	
	-- game_state at 0001 is displaying the logo --
	-- game_state at 0010 is the start menu --
	-- game_state at 0100 is running the game itself --
	game_state=0b0001
	
	logo_sprCount=0
	logo_pix={}
end

function _update()
	-- Called 30 times a second --
    local obj
	
	if game_state&0b0001==1 then
		-- run the logo --
		if logo_sprCount%5==0 then
			add( logo_pix, make_pix(60,60,(flr(rnd(6))-3),(flr(rnd(6))-3),11,10) )
		end
		
		for obj in all(logo_pix) do
			obj:update()
			
			if obj.life<=0 then
				del(logo_pix,obj)
			end
		end
		
		if btn(4) then
			game_state=0b0100
		end
		
	else	
		for obj in all(map_objects) do
			obj:update()
		end
		player:update()
	end
	
end

function _draw()
	-- Called 30 times a second, this function writes from the draw buffer --
    cls()
    local obj
	
	if game_state&0b0001==1 then
		-- run the logo --
		
		for obj in all(logo_pix) do
			obj:draw()
		end
		
		spr(010, 40, 32, 6, 7)
		if logo_sprCount>10 and logo_sprCount<20 then
			--
			rectfill(65, 42, 65, 42, 7)
		elseif logo_sprCount>20 and logo_sprCount<30 then
			--
			line(64, 42, 65, 41, 7)
		elseif logo_sprCount>30 then
			--
			rectfill(64, 41, 64, 41, 7)
		else
			--
		end
		logo_sprCount+=1
	else	
		for obj in all(map_objects) do
			obj:draw()
		end
		player:draw()
	end
	
end

function make_knight(x,y)
    return make_game_object(001,"knight",x,y,16,16,{
		jumping=false,
		update=function(self)		
			--player movement --
			if (btnp(⬆️) and self.jumping==false) then
				self.y_v=-5
				self.jumping=true
			end
			if btnp(⬇️) then
				--self.y_v+=1--
			end
			if btn(⬅️) then
				self.x_v=-2
			elseif btn(➡️) then
				self.x_v=2
			else
				self.x_v=0
			end	
		
			-- The following is collision code --
			self.x=mid(0,(self.x+self.x_v),120)
			self.y=mid(0,(self.y+self.y_v),96)
			
			for obj in all(map_objects) do
				local hit_dir=self:check_for_collision(obj)
				if hit_dir=="top" and fget(obj.sprite,0) then
					self.y=obj.y+obj.height
				elseif hit_dir=="bottom" and fget(obj.sprite,0) then	
					self.y=obj.y-self.height
					self.jumping=false
				elseif hit_dir=="left" and fget(obj.sprite,0) then	
					self.x=obj.x+obj.width
				elseif hit_dir=="right" and fget(obj.sprite,0) then	
					self.x=obj.x-self.width
				end
			end
			
			-- The force of gravity is 30 px per second, 1 px per update() call --
			-- Unless there is a hit for adjacency in the down direction --
			if (self.y_v<=0) then
				self.y_v+=1
			end
			
		end,
		draw=function(self)
			palt(0,false)
			palt(9,true)
			spr(self.sprite,self.x,self.y,2,2)
			palt(0,true)
			palt(9,false)
		end
	})
end

function make_platform(x,y)
    return make_game_object(064,"block",x,y,8,8,{})
end

function make_pix(x,y,v_x,v_y,colour,life)
	local obj={
		x=x,
		y=y,
		v_x=v_x,
		v_y=v_y,
		colour=colour,
		life=life,
		update=function(self)
			x+=v_x
			y+=v_y
			life-=1
		end,
		draw=function(self)
			line(x, y, x, y, colour)
		end
	}
	return obj
end
	
function make_game_object(sprite,name,x,y,width,height,props)
	local obj={
		-- The top left sprite --
		sprite=sprite,
		-- Game object name --
		name=name,
		-- The top left (x,y)
		x=x,
		y=y,
		-- These are velocity values --
		x_v=0,
		y_v=0,
		-- The full width and height of the complete sprite i.e. 16x16 or 8x8 etc.
		width=width,
		height=height,
		update=function(self)
			-- flag 0 sprites are stationary --
			if(fget(self.sprite,0)==false) then
				-- The force of gravity is 30 px per second, 1 px per update() call --
				if(self.y_v<=0) then
					self.y_v+=1
				end
			end
			
		end,
		draw=function(self)
			spr(self.sprite,self.x,self.y,1,1)
		end,
		check_for_hit=function(self,obj)
			-- Helper function for check_for_collision()
			return obj_overlap(self,obj) 
		end,
		check_for_collision=function(self,obj)
			-- Check to see if this obj has collided with something --
			local top_hitbox={
			    x=self.x+2,
				y=self.y,
				width=self.width-4,
				height=self.height/2
			}
			local bottom_hitbox={
			    x=self.x+2,
				y=self.y+self.height/2,
				width=self.width-4,
				height=self.height/2
			}
			local left_hitbox={
			    x=self.x,
				y=self.y+2,
				width=self.width/2,
				height=self.height-4
			}
			local right_hitbox={
			    x=self.x+self.width/2,
				y=self.y+2,
				width=self.width/2,
				height=self.height-4
			}
			if obj_overlap(top_hitbox, obj) then
				return "top"
			end
			if obj_overlap(bottom_hitbox, obj) then
				return "bottom"
			end
			if obj_overlap(left_hitbox, obj) then
				return "left"
			end
			if obj_overlap(right_hitbox, obj) then
				return "right"
			end
		end,
		check_for_adjacency=function(self,obj,direction)
			local top_hitbox={
			    x=self.x+2,
				y=self.y-2,
				width=self.width-4,
				height=self.height/2
			}
			local bottom_hitbox={
			    x=self.x+2,
				y=self.y+self.height/2,
				width=self.width-4,
				height=(self.height/2)+2
			}
			local left_hitbox={
			    x=(player.x-2),
				y=(player.y+2),
				width=6,
				height=4
			}
			local right_hitbox={
			    x=(player.x+4),
				y=(player.y+2),
				width=6,
				height=4
			}
			
			if direction=="up" and obj_overlap(top_hitbox, obj) then
				return true
			end
			if direction=="down" and obj_overlap(bottom_hitbox, obj) then
				return true
			end
			if direction=="left" and obj_overlap(left_hitbox, obj) then
				return true
			end
			if direction=="right" and obj_overlap(right_hitbox, obj) then
				return true
			end
		end
	}
	local key,value
	for key,value in pairs(props) do
		obj[key]=value
	end
	return obj
end

function line_overlap(min1,max1,min2,max2)
    return max1>min2 and max2>min1
end

function obj_overlap(obj1, obj2)
    return line_overlap(obj1.x,(obj1.x+obj1.width),obj2.x,(obj2.x+obj2.width)) and line_overlap(obj1.y,(obj1.y+obj1.height),obj2.y,(obj2.y+obj2.height))
end

__gfx__
00000000900090000009999999999999999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003b006d7d7d09999999999999999999900701100001107000070ee0000ee070000000000000000000000000000000000000000000000000000000000
007007000300d6d6d7d09b9999999999999999990001cc11111c1000000e88eeeee8e00000000000000000000000000000000000000000000000000000000000
0007700000000d6677709bb999999999999999990011c0ccccc0c10000ee808888808e0000000000000000000000000000000000000000000000000000000000
000770000906d0000000b3b9999999999999999901cc0cc1c1cc0c100e88088e8e8808e000000000000000000000000000000000000000000000000000000000
00700700990d60111109b399999999999999999901cccc11cc11c1100e8888ee88ee8ee0000000000000000000000000000000dd000000000000000000000000
00000000990d601c1c09b3b99999999999999999001c111cccc11c1000e8eee8888ee8e0000000000000000000000000000000dd000000000000000000000000
000000009906d01c1c0993b9999999999999999901ccc1cc1cc1cc100e888e88e88e88e000000000000000000000000000000d66d00000000000000000000000
000000009990d0111109b3b9999999999999999901c1ccc111ccc1000e8e888eee888e0000000000000000000000000000000d66d00000000000000000000000
00000000900000ddd000b3999999999999999999001ccc11111c107000e888eeeee8e07000000000000000000000000000000d66880000000000000000000000
000000000d6706776705555599999999999999990701c1c1ccc10000070e8e8e888e000000000000000000000000000000000d66880000000000000000000000
0000000090d00d67170d06999999999999999999001cc01c10cc100000e880e8e088e00000000000000000000000000000000d66d50000000000000000000000
000000000000011161d0d6999999999999999999000c1c01c01000000008e80e80e0000000000000000000000000000000000d66d50000000000000000000000
0000000003b00d66670905999999999999999999001c0070100c170000e80070e008e700000000000000000000000000000ddd66ddd000000000000000000000
0000000003b001100109999999999999999999990001000000010000000e0000000e00000000000000000000000000000dd66666666dd0000000000000000000
0000000090090dd00dd099999999999999999999000000000000000000000000000000000000000000000000000000000d6666666666d0000000000000000000
000000009999999999999999999999999999999900000000000000000000000000000000000000000000000000000000000bb33b3bb000000000000000000000
00000000999999999999999999999999999999990070330000330700000000004440000000000000000ccccc000cc000cc0bccccc0b000ccc000ccccc0000000
00000000999999999999999999999999999999990003bb33333b100000044444444000000000000000cc111cc00cc000cc00bc11cc00cc11cc00cc11cc000000
00000000999999999999999999999999999999990033b0bbbbb0b10000047777777400000000000000cc0011100cc000cc0bcc3bccb0cc001100cc00cc000000
000000009999999999999999999999999999999903bb0bb3b3bb0b3009999999997400000000000000cc0000000cc000bc00cc3bccb0bc000000cc00cc000000
000000009999999999999999999999999999999903bbbb33bb33b330009909990994000000000000001cccc0000cc000cb00bc3ccbb0cbcc0000cc0cc1000000
0000000099999999999999999999999999999999003b333bbbb33b30000980908994000000000000000111cc000cc000ccbbcccc1bb0cc110000ccc1cc000000
000000009999999999999999999999999999999903bbb3bb3bb3bb300009899989990000000000000000001cc00cc000cc0bcc13bbb0cc000000cc11cc000000
000000009999999999999999999999999999999903b3bbb333bbb3000000999999900000000000000000000cc00cc000cc0bcc333b00cb000000cc00cc000000
0000000099999999999999999999999999999999003bbb33333b307000555665566600000000000000cc000cc001ccccc10bcb333b00cc00cc00cc00cc000000
00000000999999999999999999999999999999990703b3b3bbb30000055066005506600000000000001ccccc10001ccc1000cc3b3bb01cccc100cc00cc000000
0000000099999999999999999999999999999999003bb03b30bb30000500600005006000000000000001111100000111000b113b3b0001111000110011000000
0000000099999999999999999999999999999999000b3b03b030000000000000000000000000000000000000000000000000b3bb3b0000000000000000000000
0000000099999999999999999999999999999999003b0070300b3700000000000000000000000000000000000000000000bbbb333b0b00000000000000000000
000000009999999999999999999999999999999900030000000300000000000000000000000000000000000000000000000bb33b300000000000000000000000
0000000099999999999999999999999999999999000000000000000000000000000000000000000000ccccc0000cccc00cccccccc00ccccc0000ccccc0000000
7777777500000000000000000000000000000000000000000000000000000000000000000000000000cc11cc00cc11cc0111cc111b0cc11cc00cc111cc000000
7666666500000000000000000000000000000000000000000000000000000000000000000000000000cc00cc00cc00110000ccb33b0cc00cc00cc000cc000000
7677776500000000000000000000000000000000000000000000000000000000000000000000000000cc00cc00cc0000000bbc3b300cc00cc00cc000cc000000
7676656500000000000000000000000000000000000000000000000000000000000000000000000000cc0cc100cccc000000cc333bbcc0cc100cc000cc000000
7676656500000000000aaa000088800000000000000000000000000000000000000000000000000000ccc1cc00cc11000000cb3b3b0ccc1cc00cc000cc000000
7655556500000000000000000000000000000000000000000000000000000000000000000000000000cc11cc00cc00000000ccbb3bbcc11cc00cc000cc000000
7666666500000000000000000000000000000000000000000000000000000000000000000000000000cc00cc00cc000000b0bcb33b0cc00cc00cc000cc000000
5555555500000000000000000000000000000000000000000000000000000000000000000000000000cc00cc00cc00cc0000cc3b300cc00cc00cc000cc000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00cc001cccc10000cc3b300cc00cc001ccccc1000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000011001100011110000b11b3300110011000111110000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb33b3bbb00000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0b3bb3bb000000000000000000000
0000000000000000000777000000000000000000000000000000000000000000000000000000000000000000000000000000b333bb0000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb3b33b00000cccc0000ccccc0000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000ccccc0000cccc000ccb33bbbcc00cc11cc00cc111cc000
000000000000000000000000000000000000000000000000000000000000000000000000000000000cc111cc00cc11cc00ccccb3cccc00cc001100cc00111000
99999999999999990000000000cc66666666cc0000000000000000000000000000000000000000000cc0001100cc00cc00bccccccccc00cc000000cc00000000
ddd9999999999ddd00ddd000006c67777776c60000000000000000000000000000000000000000000cc0000000cc0ccc00cc1cccc1cc01cccc00001cccc00000
99ddd999999ddd9900dbd000006777777777760000000000000000000000000000000000000000000cc00ccc00ccc1cc00cc01cc1bcc00cc1100000111cc0000
9999dd0000dd999900d5d000006777777777760000000000000000000000000000000000000000000cc000cc00cc10cc00bc00cc00ccb0cc00000000001cc000
d9990088e8009ddd00d5d000006777777777760000000000000000000000000000000000000000000cc000cc00cc00cc00cc00cc00cc00cc00000000000cc000
9ddd73800880dd9900666000006777777777760000000000000000000000000000000000000000000cc000cc00cc00cc00cc00cc00cc00cc00cc00cc000cc000
9990b30550e8099900d8d0000067777777777600000000000000000000000000000000000000000001cccccc00cc00cc00cc00cc00cc011cccc1001ccccc1000
9990bb0000aa099900ddd00000677777777776000000000000000000000000000000000000000000001111110011001100110011001100011110000111110000
99903b0660a909990000000000677777777776000777777000000000000000000000000000000000000000000000000000000000000000000000000000000000
9997733009a0999900ddd0000067777777777600dddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000
9997703aaa07999900dbd00000677777777776000dd33bd000000000000000000000000000000000000000000000000000000000000000000000000000000000
99997900077999990066600000677777777776000d3dbbd000000000000000000000000000000000000000000000000000000000000000000000000000000000
999999999979999900d5d00000677777777776000d3dd3d000000000000000000000000000000000000000000000000000000000000000000000000000000000
999999999999999900d5d00000677777777776000dbbd3d000000000000000000000000000000000000000000000000000000000000000000000000000000000
999999999999999900d8d000006c67777776c6000db33dd000000000000000000000000000000000000000000000000000000000000000000000000000000000
999999999999999900ddd00000cc66666666cc0000dddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccccccccccc33333333b333b333cccccccbccccccccccccccccbccccccbcccccccc33333333bccccccccccccccccccccccccccccccc
ccccccccccccc7777777ccc7777ccccc333333b33b3333e3ccccccb3cccccccccccccccc3bccccb3cccccccc3e33333e3bcccccccccccccccccccccccccccccc
cccccccccc7777777777777777777ccc3b3333333bbb3333cccccb33ccccbbbbbbbccccc3bbbcb3ebbbbbbbb3333b3333bbbccccccffcccccc8888ccccc11ccc
ccccccccc777777777777777777777cc3333b333333bb33bccccb33ecccbb333333bcccc333bb3333333333333333333333bbccccc77ffcccc8788cccc1711cc
ccccccccc7777777777777777777777c33333333e333bb33cccb3333ccb333333333bccc3b33bb3333e3b3e333b33e333b33bbccccff1fcccc8778cccc1171cc
cccccccc77777777777777777777777733333b333b333bb3ccb3333bcb33b33e3e333bcc33333bb33b33e3333333333333333bbcccf1f1cccc8888ccccc11ccc
cccccccccccc77cc777cc7777cc777cc33b333333333e3bbcb33b333cb333333333e33bc33e333bb333333b3333e333be33e33bbcccccccccccccccccccccccc
cccccccccccccccccccccccccccccccc33333333333b333bb33333e3b333e3b33333333b333b333b33b33333333333333333b33bcccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555555555555555555555555555
cc7777cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccddcccccc11ccccccccccc555555555dddddddddddddddddddddd5
c711111ccceeeecccc5555cccc9999cccc2222cccc1111ccccc44ccccccddcccccc00cccccddddcccc1cc1ccccffcccc555555555dd77dddddddddddddddddd5
c71cc1cccce7eecccc5755cccc9799cccc2722cccc1711cccc4744ccccd7ddcccc0700cccd7777dcc777777ccc77ffcc555555555d7dd7ddddddddddddddddd5
c71cc1cccce77ecccc5775cccc9779cccc2772cccc1771cccc4474ccccdd7dcccc0070cccddddddcc778377cccffffcc555555555d7dd7ddddddddddddddddd5
c711c11ccceeeecccc5555cccc9999cccc2222cccc1111ccccc44ccccccddcccccc00ccccddddddcc771a77cccffffcc555555555dd77dddddddddddddddddd5
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc777777ccccccccc555555555d7dddddddddddddddddddd5
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc5555555557ddddddddddddddddddddd5
55555555555555555555555555555555555555555555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
55555555555dd5555551155555777755555555555555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
55ff555555dddd55551551555711111555eeee555588885555544555000000000000000000000000000000000000000000000000000000000000000000000000
5577ff555d7777d5577777755715515555e7ee555587885555474455000000000000000000000000000000000000000000000000000000000000000000000000
55ff1f555dddddd5577837755715515555e77e555587785555447455000000000000000000000000000000000000000000000000000000000000000000000000
55f1f1555dddddd55771a7755711511555eeee555588885555544555000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555555777777555555555555555555555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
8d9b9b8080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
908f9b8081828380808182838080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9a979b8080808182838080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99929b8080808080808081828283808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8e94808182828380808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
919b808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
969b808080808001028080818283808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
939b808080808011128080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9b80808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
80808080878a88808080878a8a88808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
808080868484848c80868b848b848c8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8c80868484848b84898b8484848b8b8c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
848984848b8484848b858b8b8b848b8400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8b8b858484848b848b8b858b84848b8400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
848b84858b8b848b8b848b858b848b8400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9c9d9e9f9ca0a1a2a3a4a5a69c9c9c9c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
